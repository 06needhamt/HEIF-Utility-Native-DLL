<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{02DE3240-9FC6-340B-A145-07057CC2FB6E}</ProjectGuid>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>HUD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Bins\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">HUD.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">HUD</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Bins\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">HUD.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">HUD</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Bins\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">HUD.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">HUD</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Bins\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">HUD.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">HUD</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>E:\OneDrive\Dev\第三方库\opencv\build\include;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableLanguageExtensions>true</DisableLanguageExtensions>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SuppressStartupBanner>
      </SuppressStartupBanner>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\jsonlib\Debug\json.lib;..\writer\Debug\heifwriter.lib;..\common\Debug\common.lib;..\parser\h265parser\Debug\h265parser.lib;..\parser\avcparser\Debug\avcparser.lib;..\common\Debug\common.lib;..\parser\h265parser\Debug\h265parser.lib;..\parser\avcparser\Debug\avcparser.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/Debug/HUD.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/Debug/HUD.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <DisableLanguageExtensions>true</DisableLanguageExtensions>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SuppressStartupBanner>
      </SuppressStartupBanner>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <SDLCheck>false</SDLCheck>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>opencv_world330.lib;..\jsonlib\Release\json.lib;..\writer\Release\heifwriter.lib;..\common\Release\common.lib;..\parser\h265parser\Release\h265parser.lib;..\parser\avcparser\Release\avcparser.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/Release/HUD.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/Release/HUD.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <DisableLanguageExtensions>true</DisableLanguageExtensions>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SuppressStartupBanner>
      </SuppressStartupBanner>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\jsonlib\MinSizeRel\json.lib;..\writer\MinSizeRel\heifwriter.lib;..\common\MinSizeRel\common.lib;..\parser\h265parser\MinSizeRel\h265parser.lib;..\parser\avcparser\MinSizeRel\avcparser.lib;..\common\MinSizeRel\common.lib;..\parser\h265parser\MinSizeRel\h265parser.lib;..\parser\avcparser\MinSizeRel\avcparser.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/MinSizeRel/HUD.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/MinSizeRel/HUD.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableLanguageExtensions>true</DisableLanguageExtensions>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SuppressStartupBanner>
      </SuppressStartupBanner>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\common;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\jsonlib;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\parser;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\reader;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\writer;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\jsonlib\RelWithDebInfo\json.lib;..\writer\RelWithDebInfo\heifwriter.lib;..\common\RelWithDebInfo\common.lib;..\parser\h265parser\RelWithDebInfo\h265parser.lib;..\parser\avcparser\RelWithDebInfo\avcparser.lib;..\common\RelWithDebInfo\common.lib;..\parser\h265parser\RelWithDebInfo\h265parser.lib;..\parser\avcparser\RelWithDebInfo\avcparser.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/RelWithDebInfo/HUD.lib</ImportLibrary>
      <ProgramDataBaseFile>C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Bins/RelWithDebInfo/HUD.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version>
      </Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Software\cmake\bin\cmake.exe -HC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL -BC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC --check-stamp-file C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC/Srcs/HUD/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\HUD\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Software\cmake\bin\cmake.exe -HC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL -BC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC --check-stamp-file C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC/Srcs/HUD/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\HUD\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Software\cmake\bin\cmake.exe -HC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL -BC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC --check-stamp-file C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC/Srcs/HUD/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\HUD\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Software\cmake\bin\cmake.exe -HC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL -BC:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC --check-stamp-file C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/MSVC/Srcs/HUD/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/Users/liuzi/Documents/GitHub/HEIF-Utility-Native-DLL/Srcs/HUD/CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\HUD\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\Srcs\HUD\main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\ZERO_CHECK.vcxproj">
      <Project>{E3795462-8073-3514-A32E-CA41595DA430}</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\common\common.vcxproj">
      <Project>{89374928-02CB-32E5-86FD-272DCF3846CA}</Project>
      <Name>common</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\writer\heifwriter.vcxproj">
      <Project>{5A25C650-82EB-342D-B9C7-8DC2564C6C56}</Project>
      <Name>heifwriter</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Users\liuzi\Documents\GitHub\HEIF-Utility-Native-DLL\MSVC\Srcs\jsonlib\json.vcxproj">
      <Project>{C3EE2654-A40B-3F7E-8676-46B2AAB81BE1}</Project>
      <Name>json</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>